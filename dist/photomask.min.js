var Photomask=function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].a;var module=installedModules[moduleId]={a:{},b:moduleId,c:false};modules[moduleId].call(module.a,module,module.a,__webpack_require__);module.c=true;return module.a}__webpack_require__.d=modules;__webpack_require__.e=installedModules;__webpack_require__.f="";return __webpack_require__(0)}([function(module,exports){"use strict";Object.defineProperty(exports,"__esModule",{g:true});exports.h=transform;var computedProperty=function computedProperty(element){return function(property){var coerceFn=arguments.length<=1||arguments[1]===undefined?parseFloat:arguments[1];return(coerceFn||function(x){return x})(getComputedStyle(element).getPropertyValue(property),10)}};function transform(img){var _ref=arguments.length<=1||arguments[1]===undefined?{}:arguments[1];var src=_ref.i;var text=_ref.j;var _ref$paddingLeft=_ref.k;var paddingLeft=_ref$paddingLeft===undefined?0:_ref$paddingLeft;var _ref$paddingRight=_ref.l;var paddingRight=_ref$paddingRight===undefined?0:_ref$paddingRight;var _ref$paddingTop=_ref.m;var paddingTop=_ref$paddingTop===undefined?0:_ref$paddingTop;var computed=computedProperty(img);var height=computed("height");var width=computed("width");if(height===0||width===0){throw new Error("Photomask: Image MUST have a fixed height and width.")}var fontFamily=computed("font-family",null);var fontSize=function computeFontSize(_x3,_x4){var _again=true;_function:while(_again){var size=_x3,widthConstraint=_x4;_again=false;var canvas=document.createElement("canvas");var context=canvas.getContext("2d");context.n=size+"px "+fontFamily;if(context.measureText(text).width<=widthConstraint){return size}_x3=size-1;_x4=widthConstraint;_again=true;canvas=context=undefined;continue _function}}(500,width-(paddingLeft+paddingRight));var svg='<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink"\n                      preserveAspectRatio="xMidYMid meet" viewBox="0 0 '+width+" "+height+'">\n                    <defs>\n                        <mask id="mask" maskUnits="userSpaceOnUse" width="'+width+'" height="'+height+'" x="0" y="0" />\n                        <text id="photomask" x="'+width/2+'" y="'+(height/2+paddingTop)+'" fill="white"\n                              font-size="'+fontSize+'" font-family="'+fontFamily+'"\n                              alignment-baseline="central" text-anchor="middle">\n                            '+text+'\n                        </text>\n                    </defs>\n                    <use xlink:href="#photomask" />\n                 </svg>';var data="data:image/svg+xml;base64,"+btoa(svg);img.setAttribute("style","\n        padding: 0;\n        background-image: url("+src+");\n        background-size: cover;\n        -webkit-mask-image: url("+data+");\n        mask: url("+data+"#mask)")}function readAttributes(element){var computed=computedProperty(element);var paddingLeft=computed("padding-left");var paddingRight=computed("padding-right");var paddingTop=computed("padding-top");return{j:element.getAttribute("alt"),i:element.getAttribute("src"),k:paddingLeft,l:paddingRight,m:paddingTop}}document.registerElement("x-photomask",{o:"img",prototype:Object.create(HTMLImageElement.prototype,{p:{g:function attachedCallback(){transform(this,readAttributes(this))}}})})}]);